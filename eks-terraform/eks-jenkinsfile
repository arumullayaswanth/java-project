pipeline {
    agent any

    parameters {
        choice(
            name: 'ACTION',
            choices: ['apply', 'destroy'],
            description: 'ðŸ”§ Select the Terraform action to perform'
        )
    }

    stages {
        stage('Checkout from Git') {
            steps {
                echo 'Checking out Git repository...'
            }
        }

        stage('Terraform version') {
            steps {
                sh 'terraform --version'
            }
        }

        stage('Terraform init') {
            steps {
                dir('eks-terraform') {
                    sh 'terraform init --reconfigure'
                }
            }
        }

        stage('Terraform validate') {
            steps {
                dir('eks-terraform') {
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform plan') {
            steps {
                dir('eks-terraform') {
                    sh 'terraform plan'
                }
            }
        }

        stage('Terraform apply') {
            when {
                expression { params.ACTION == 'apply' }
            }
            steps {
                dir('eks-terraform') {
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Terraform destroy') {
            when {
                expression { params.ACTION == 'destroy' }
            }
            steps {
                dir('eks-terraform') {
                    sh 'terraform destroy -auto-approve'
                }
            }
        }
    }
}
